@startuml model_コメント取得クラス図
    interface TcpClient{
        fun ConnectServerService(api:Api)
        fun receiveResponse(): Response
    }
    class NicoNicoTcpClient{

    }
    class TwicasTcpClient{

    }

    interface ConnectLiveApi{
        fun getLiveInfo(): String
    }
    
    interface AuthenticationApi{
        fun getAuthenticationInformationApi(): String
        fun getSimpleAuthenticationInformationApi(): string
    }

    class NiconicoApi {}

    class TwicasApi{}

    class ConverterStandard { 
    }

    abstract class ConnectCommentServer {
        + fun fetchCommentAsync(): UserInfoStandardModel;
        - {abstract} fun extarctWebsokectUrl(): string;
        - {abstract} async fun fetchCommentAsync(url:string): Response;
        - {abstract} fun fun convertToUserInfoModel(response:Response): UserInfoModel;
    }

    interface LiveRestClient{
        + fun getWebSocketUrl(): string;
    }
    class NiconicoRestClient{

    }
    class HttpClient{
        + {static} getAsync(request:string): Response<String>;
        + {static} postAsync(request:string): Response<String>;
    }

    abstract class Converter{
        - userInfo : Json
        - userId: string
        - userIcon: Uri
        - comment: string

        fun convertToUserInfo(response:Response):UserInfo
        -  fun convertToJson(response: Response): Json
        -  fun extractUserId(): string
        -  fun extractUserIcon(): Uri
        -  fun extractComment(): String
        + {abstract} fun<T extends UserInfoModel> build(): T  
    }

    class UserInfoModel{
        - userId : string;
        - userIcon : Uri
        - comment : string
    }
    
    class ConnectServerService{
        + async fun ConnectServerService(): UserInfo
        - fun convertToUserInfo(response: Response) : UserInfo
    }
    'コネクトサーバ
    ConnectServerService *--|> ConnectCommentServer
    'コネクトコメントサーバ'
    ConnectCommentServer *--|> LiveRestClient
    ConnectCommentServer *-right-|> TcpClient
    ConnectCommentServer *-left-|> Converter


    'ユーザー情報
    UserInfoModel +--> Converter
    'コンバータ
    Converter --> UserInfoModel
    'クライアント
    NicoNicoTcpClient .up.> TcpClient
    TwicasTcpClient .left.> TcpClient
    'ユーザー情報モデル
    UserInfoStandardModel -right-|> UserInfoModel
    'レストクライアント
    NiconicoRestClient .right.|> LiveRestClient
    TwicasRestClient   .left.|>  LiveRestClient
    LiveRestClient -down-> HttpClient
    TwicasApi ..|>   ConnectLiveApi
    NiconicoApi ..|> ConnectLiveApi
    TwicasApi ..|>  AuthenticationApi
    
    ConverterStandard -right-|> Converter


@enduml