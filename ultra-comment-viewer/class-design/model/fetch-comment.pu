@startuml コメント取得クラス図


    class MainWindow{
      +  ClickConnectionButtonServer()
    }
    class LiveStatusModel{
        + isConnect
    }
    class CommentModel{
        + getCommentModel()
    }
    class CommentGenerator{
        - CommentModel
        + ConnectCommentServer  
        + DisconnetServer
    }
    class ConnectSwitcher{
        + EventTODO()
    }

    abstract class UserInfoWindow{

    }




    CommentGenerator --> CommentModel
    MainWindow --> ConnectSwitcher
    CommentGenerator *--> ConnectCommentServer
    ConnectSwitcher *--> CommentGenerator
    ConnectSwitcher --> LiveStatusModel
    abstract class ABLiveWebSocketClient{
        + ReadCommentFromServerAsync(string userId) : IAsyncEnumerable<CommentModel>
        + DisconnetServer() : Task
        # StartConnectServer() : Task<bool>
        # ReceiveResponse() : IAsyncEnumerable<string>      
    }

    class NicoNicoABLiveWebSocketClient{

    }
    class TwicasABLiveWebSocketClient{
        + 
    }

    class SqliteSupport{
        - CreateTable(): void
        + InsertData(tableModel model) : void
        + SelectTable(Primarykey key) : List<CommentModel>
    }

    class Logger{
        + PushData(CommentModel model) : void
        + SelectCommentLog() : List<CommentModel>
    }


    'Observer
    class DisconnectObserver{
        + CommmentGenerator generator;
        + notify() : void
    }
    CommentGenerator -left-> DisconnectObserver

    class ConnectCommentServer {
        + fun fetchCommentAsync(): IAsyncEnumerable<CommentModel>;
        
    }
    
    class DropLogic{
        + DoStartOpenBrowser(string comment) : void
        + OpenUserInfoWindow(CommentModel model) : void

    }

    interface LiveRestClient{
        + fun getWebSocketUrl(): string;
    }
    class NiconicoRestClient{

    }
    class HttpClient{
        + {static} getAsync(request:string): Response<String>;
        + {static} postAsync(request:string): Response<String>;
    }

    abstract class Converter{
        + {abstract} CovertToCommentModelFromJson(string reponse) : CommentModels
    }
    Converter <|-- Twicas

    class UserInfoModel{
        - userId : string;
        - userIcon : Uri
        - comment : string
    }
    
    'コネクトコメントサーバ'
    ConnectCommentServer *--|> LiveRestClient
    ConnectCommentServer *-right-|> ABLiveWebSocketClient
    ConnectCommentServer *-left-|> Converter


    'ユーザー情報
    UserInfoModel +--> Converter
    'コンバータ
    Converter --> UserInfoModel
    'クライアント
    NicoNicoABLiveWebSocketClient .up.> ABLiveWebSocketClient
    TwicasABLiveWebSocketClient .left.> ABLiveWebSocketClient
    'ユーザー情報モデル
    UserInfoStandardModel -right-|> UserInfoModel
    'レストクライアント
    NiconicoRestClient .right.|> LiveRestClient
    TwicasRestClient   .left.|>  LiveRestClient
    LiveRestClient -down-> HttpClient
    
    ConverterStandard -right-|> Converter
    
    CommentGenerator -up-> Logger
    Logger -left-> SqliteSupport

    MainWindow -right-> DropLogic
    DropLogic -right-> UserInfoWindow

    'ユーザー詳細情報ウィンドウ
    TwicasUserInfoWindow --|> UserInfoWindow



@enduml